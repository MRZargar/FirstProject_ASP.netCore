@{
    Layout = "_DefaultLayout";
    ViewData["DefaultStyle"] = false;
    ViewBag.headerColor = "bg-chartbg";
}

@section StyleSheets{
    <link rel="stylesheet" type="text/css" href="~/theme-assets/vendors/css/charts/chartist.css">
    <link rel="stylesheet" type="text/css" href="~/theme-assets/css/pages/dashboard-ecommerce.css">
    @RenderSection("StyleSheets", false)
}

<!-- Chart -->
<div class="row match-height">
    <div class="col-12">
        <div class="">
            <div id="gradient-line-chart1" class="height-250 GradientlineShadow1"></div>
        </div>
    </div>
</div>
<!-- Chart -->

<div class="alert alert-success" id="SuccessAlert" role="alert">
    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
    <div id="SuccessAlert-body"></div>
</div>
<div class="alert alert-danger" id="DangerAlert" role="alert">
    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
    <div id="DangerAlert-body"></div>
</div>

@RenderBody()

@section Script{
    <!-- BEGIN PAGE VENDOR JS-->
    <script src="~/theme-assets/vendors/js/charts/chartist.min.js" type="text/javascript"></script>
    <!-- END PAGE VENDOR JS-->
    <!-- BEGIN PAGE LEVEL JS-->
    @*<script src="~/theme-assets/js/scripts/pages/dashboard-lite.js" type="text/javascript"></script>*@
    <!-- END PAGE LEVEL JS-->

<script>
    var lineGradientChart1 = new Chartist.Line('#gradient-line-chart1', {
        labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
        series: [@ViewBag.ChartData]
    }, {
            low: 100,
            fullWidth: true,
            onlyInteger: true,
            axisY: {
                low: 0,
                scaleMinSpace: 50,
            },
            axisX: {
                showGrid: false
            },
            lineSmooth: Chartist.Interpolation.simple({
                divisor: 2
            })
        });
    lineGradientChart1.on('created', function (data) {
        var defs = data.svg.querySelector('defs') || data.svg.elem('defs');
        defs.elem('linearGradient', {
            id: 'lineLinear1',
            x1: 0,
            y1: 0,
            x2: 1,
            y2: 0
        }).elem('stop', {
            offset: '0%',
            'stop-color': 'rgba(168,120,244,0.1)'
        }).parent().elem('stop', {
            offset: '10%',
            'stop-color': 'rgba(168,120,244,1)'
        }).parent().elem('stop', {
            offset: '80%',
            'stop-color': 'rgba(255,108,147, 1)'
        }).parent().elem('stop', {
            offset: '98%',
            'stop-color': 'rgba(255,108,147, 0.1)'
        });
        defs.elem('linearGradient', {
            id: 'lineLinear2',
            x1: 0,
            y1: 0,
            x2: 1,
            y2: 0
        }).elem('stop', {
            offset: '0%',
            'stop-color': 'rgba(0,230,175,0.1)'
        }).parent().elem('stop', {
            offset: '10%',
            'stop-color': 'rgba(0,230,175,1)'
        }).parent().elem('stop', {
            offset: '80%',
            'stop-color': 'rgba(255,161,69, 1)'
        }).parent().elem('stop', {
            offset: '98%',
            'stop-color': 'rgba(255,161,69, 0.1)'
        });
        return defs;
    }).on('draw', function (data) {
        var circleRadius = 10;
        if (data.type === 'point') {
            var circle = new Chartist.Svg('circle', {
                cx: data.x,
                cy: data.y,
                'ct:value': data.y,
                r: circleRadius,
                class: data.value.y === 225 ? 'ct-point ct-point-circle' : 'ct-point ct-point-circle-transperent'
            });
            data.element.replace(circle);
        }
        if (data.type === 'line') {
            data.element.animate({
                d: {
                    begin: 1000,
                    dur: 1000,
                    from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),
                    to: data.path.clone().stringify(),
                    easing: Chartist.Svg.Easing.easeOutQuint
                }
            });
        }
    });


</script>

    @RenderSection("Script", false)
}
